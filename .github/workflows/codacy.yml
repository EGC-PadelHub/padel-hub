name: Codacy CI

on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: uvlhub_root_password
          MYSQL_DATABASE: uvlhubdb_test
          MYSQL_USER: uvlhub_user
          MYSQL_PASSWORD: uvlhub_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        python-version: ['3.11', '3.12']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necesario para an√°lisis completo de Codacy

    - name: Check for outdated dependencies
      run: |
        echo "üîç Verificando dependencias desactualizadas..."
        pip list --outdated --format=columns || echo "No se pudieron verificar dependencias"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage pytest coverage

    - name: Security audit with pip-audit
      run: |
        pip install pip-audit
        pip-audit --format json --output pip-audit-report-${{ matrix.python-version }}.json || true
      continue-on-error: true

    - name: Run tests and generate coverage
      run: |
        echo "üß™ Ejecutando tests con Python ${{ matrix.python-version }}..."
        coverage run -m pytest app/modules/ --ignore-glob='*selenium*' -v
        coverage report -m
      env:
        FLASK_ENV: testing
        MARIADB_HOSTNAME: 127.0.0.1
        MARIADB_PORT: 3306
        MARIADB_TEST_DATABASE: uvlhubdb_test
        MARIADB_USER: uvlhub_user
        MARIADB_PASSWORD: uvlhub_password

    - name: Generate coverage XML
      run: |
        coverage xml
        echo "üìä Coverage XML generado:"
        echo "L√≠neas cubiertas: $(grep -o 'line-rate="[0-9.]*"' coverage.xml | head -1)"

    - name: Upload coverage to Codacy
      if: matrix.python-version == '3.11'  # Solo subir una vez para evitar duplicados
      run: |
        echo "üì§ Subiendo coverage a Codacy..."
        python-codacy-coverage -r coverage.xml
        echo "‚úÖ Coverage subido exitosamente a Codacy"
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py-${{ matrix.python-version }}
        path: |
          coverage.xml
          pip-audit-report-${{ matrix.python-version }}.json
        retention-days: 7

  notify-codacy:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    
    steps:
    - name: Notify Codacy status
      run: |
        echo "üéâ Pipeline de Codacy CI completado"
        echo "üìà Los resultados de coverage est√°n disponibles en:"
        echo "    https://app.codacy.com/gh/${{ github.repository }}/dashboard"
        echo "üîç Revisa la calidad de c√≥digo en tu dashboard de Codacy"
